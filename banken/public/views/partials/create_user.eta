<form id="create-user" class="space-y-4" action="/admin/user/new" method="POST" enctype="application/x-www-form-urlencoded">
                <!-- Name Field -->
                <div class="form-control">
                    <label class="label" for="name">
                        <span class="label-text">
                            <i class="fas fa-user mr-2"></i> Full Name
                        </span>
                    </label>
                    <input 
                        type="text" 
                        id="name"
                        name="name"
                        placeholder="John Doe" 
                        class="input input-bordered w-full" 
                        required
                    />
                </div>
                
                <!-- Email Field -->
                <div class="form-control">
                    <label class="label" for="email">
                        <span class="label-text">
                            <i class="fas fa-envelope mr-2"></i> Email
                        </span>
                    </label>
                    <input 
                        type="email" 
                        id="email"
                        name="email"
                        placeholder="john@example.com" 
                        class="input input-bordered w-full" 
                        required
                    />
                </div>
                
                <!-- Password Field -->
                <div class="form-control">
                    <label class="label" for="password">
                        <span class="label-text">
                            <i class="fas fa-lock mr-2"></i> Password
                        </span>
                    </label>
                    <input 
                        type="password" 
                        id="password"
                        name="password"
                        placeholder="••••••••" 
                        class="input input-bordered w-full" 
                        required
                    />
                </div>
                
                <!-- Role Selection -->
                <div class="form-control">
                    <label class="label" for="role">
                        <span class="label-text">
                            <i class="fas fa-user-tag mr-2"></i> Role
                        </span>
                    </label>
                    <select id="role" name="role" class="select select-bordered w-full">
                        <option disabled selected>Select a role</option>
                        <option value="admin">Admin</option>
                        <option value="editor">Editor</option>
                        <option value="user">User</option>
                    </select>
                </div>
                
                <!-- Submit Button -->
                <div class="card-actions justify-end mt-6">
                    <button type="submit" class="btn btn-primary w-full">
                        <i class="fas fa-save mr-2"></i> Create User
                    </button>
                </div>
            </form>
<script>
    document.getElementById('create-user').addEventListener('submit', async (e) => {
  e.preventDefault();
  const form = e.target;
  const submitButton = form.querySelector('button[type="submit"]');
  
  // Reset previous errors
  document.querySelectorAll('.input-error').forEach(el => el.classList.remove('input-error'));
  document.querySelectorAll('.error-message').forEach(el => el.remove());
  
  // Show loading state
  submitButton.disabled = true;
  const originalButtonText = submitButton.innerHTML;
  submitButton.innerHTML = '<span class="loading loading-spinner"></span> Creating...';

  try {
    const response = await fetch(form.action, {
      method: 'POST',
      body: new URLSearchParams(new FormData(form)),
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    });

    const result = await response.json();
    
    if (response.ok && result.success) {
      // Success case - reload or redirect
      window.location.reload();
    } else {
      // Error case - display validation messages
      for (const [field, message] of Object.entries(result.issues)) {
        if (message) {
          const inputName = field.replace('Error', '').toLowerCase();
          const input = form.querySelector(`[name="${inputName}"]`);
          
          if (input) {
            // Add error class to input
            input.classList.add('input-error');
            
            // Create error message element
            const errorElement = document.createElement('div');
            errorElement.className = 'error-message text-error text-sm mt-1';
            errorElement.textContent = message;
            
            // Insert after input
            input.parentNode.insertBefore(errorElement, input.nextSibling);
          }
        }
      }
    }
  } catch (error) {
    console.error('Error:', error);
    alert('An unexpected error occurred. Please try again.');
  } finally {
    submitButton.disabled = false;
    submitButton.innerHTML = originalButtonText;
  }
});
</script>
